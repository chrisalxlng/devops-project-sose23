name: Resusable deployment workflow

on:
  workflow_call:
    inputs:
      target-env:
        required: true
        type: string

env:
  DATABASE_RELEASE_IMAGE_TAG: ghcr.io/${{ github.REPOSITORY }}:0.0.${{ github.RUN_NUMBER }}-database
  APP_RELEASE_IMAGE_TAG: ghcr.io/${{ github.REPOSITORY }}:0.0.${{ github.RUN_NUMBER }}-app
  NGINX_RELEASE_IMAGE_TAG: ghcr.io/${{ github.REPOSITORY }}:0.0.${{ github.RUN_NUMBER }}-nginx

jobs:
  deploy:
    name: Deploy to ${{ inputs.target-env }}
    permissions:
      contents: none
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.target-env }}
    steps:
      - uses: actions/checkout@v3

      - name: Create DNS record for ${{ vars.DOMAIN }} if not existing already
        env:
          AWS_HOSTED_ZONE_ID: ${{ vars.AWS_HOSTED_ZONE_ID }}
          AWS_EIP_ALLOCATION_ID: ${{ vars.AWS_EIP_ALLOCATION_ID }}
          DOMAIN: ${{ vars.DOMAIN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
        run: chmod +x infrastructure/configure-dns-records.sh && infrastructure/configure-dns-records.sh

      - name: Configure SSH keys
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
        run: chmod +x infrastructure/configure-ssh.sh && infrastructure/configure-ssh.sh

      - name: Create new EC2 instance
        id: create_instance
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
          ENVIRONMENT: ${{ inputs.target-env }}
          TF_VAR_EIP_ALLOCATION_ID: ${{ vars.AWS_EIP_ALLOCATION_ID }}
          TF_VAR_ENVIRONMENT: ${{ inputs.target-env }}
        run: chmod +x infrastructure/ec2-up.sh && infrastructure/ec2-up.sh      

      - name: Deploy app via SSH
        env:
          REPOSITORY: ${{ github.REPOSITORY }}
          INSTANCE_IPV4: ${{ steps.create_instance.outputs.instance_ipv4 }}
          GHCR_USER: ${{ github.REPOSITORY_OWNER }}
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          DATABASE_IMAGE_TAG: ${{ env.DATABASE_RELEASE_IMAGE_TAG }}
          APP_IMAGE_TAG: ${{ env.APP_RELEASE_IMAGE_TAG }}
          NGINX_IMAGE_TAG: ${{ env.NGINX_RELEASE_IMAGE_TAG }}
          DOMAIN: ${{ vars.DOMAIN }}
          ENVIRONMENT: ${{ inputs.target-env }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
        run: chmod +x infrastructure/deploy.sh && infrastructure/deploy.sh

      - name: Route traffic to new instance when healthy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
          EIP_ALLOCATION_ID: ${{ vars.AWS_EIP_ALLOCATION_ID }}
          INSTANCE_ID: ${{ steps.create_instance.outputs.instance_id }}
          INSTANCE_IPV4: ${{ steps.create_instance.outputs.instance_ipv4 }}
        run: chmod +x infrastructure/reroute-traffic.sh && infrastructure/reroute-traffic.sh

      - name: Configure SSL certificates with certbot
        env:
          DOMAIN: ${{ vars.DOMAIN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
        run: chmod +x infrastructure/configure-ssl-keys.sh && infrastructure/configure-ssl-keys.sh

      - name: Terminate previous instance
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
          PREVIOUS_INSTANCE_ID: ${{ steps.create_instance.outputs.previous_instance_id }}
        run: chmod +x infrastructure/terminate-ec2.sh && infrastructure/terminate-ec2.sh